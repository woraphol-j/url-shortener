version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.11
      - image: circleci/mongo:4.1.3
        environment:
          POSTGRES_USER: circleci-demo-go
          POSTGRES_DB: circle_test

    working_directory: /go/src/github.com/woraphol-j/url-shortener

    environment:
      TEST_RESULTS: /tmp/test-results

    steps:
      - checkout
      - run: mkdir -p $TEST_RESULTS

      - restore_cache:
          keys:
            - v1-pkg-cache

      # Normally, this step would be in a custom primary image;
      # we've added it here for the sake of explanation.
      - run: go get github.com/onsi/ginkgo

      - run:
          name: Waiting for Mongo to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 27017 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Mongo && exit 1
      - run:
          name: Run unit tests
          # environment:
          #   CONTACTS_DB_URL: "postgres://circleci-demo-go@localhost:5432/circle_test?sslmode=disable"
          #   CONTACTS_DB_MIGRATIONS: /go/src/github.com/CircleCI-Public/circleci-demo-go/db/migrations
          command: |
            # trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
            # make test | tee ${TEST_RESULTS}/go-test.out
            # ginkgo -r
            MONGO_URL=mongodb://localhost:27017 MONGO_DATABASE=url-shortener MONGO_COLLECTION=urls ginkgo -r
      # - run: make

      - save_cache:
          key: v1-pkg-cache
          paths:
            - "/go/pkg"

      # - run:
      #     name: Start service
      #     environment:
      #       CONTACTS_DB_URL: "postgres://circleci-demo-go@localhost:5432/circle_test?sslmode=disable"
      #       CONTACTS_DB_MIGRATIONS: /go/src/github.com/CircleCI-Public/circleci-demo-go/db/migrations
      #     command: ./workdir/contacts
      #     background: true

      # - run:
      #     name: Validate service is working
      #     command: |
      #       sleep 5
      #       curl --retry 10 --retry-delay 1 -X POST --header "Content-Type: application/json" -d '{"email":"test@example.com","name":"Test User"}' http://localhost:8080/contacts

      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results:
          path: /tmp/test-results
